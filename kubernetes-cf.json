{
  "Resources": {
    "AWSAutoScalingAutoScalingGroupbastionsdomaincom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "bastions.domain.com",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationbastionsdomaincom"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetutilityeuwest1adomaincom"
          },
          {
            "Ref": "AWSEC2Subnetutilityeuwest1bdomaincom"
          },
          {
            "Ref": "AWSEC2Subnetutilityeuwest1cdomaincom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "bastions.domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "bastions",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/bastion",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerbastiondomaincom"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupmastereuwest1amastersdomaincom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-eu-west-1a.masters.domain.com",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmastereuwest1amastersdomaincom"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest1adomaincom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-eu-west-1a.masters.domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-eu-west-1a",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapidomaincom"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupmastereuwest1bmastersdomaincom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-eu-west-1b.masters.domain.com",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmastereuwest1bmastersdomaincom"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest1bdomaincom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-eu-west-1b.masters.domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-eu-west-1b",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapidomaincom"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupmastereuwest1cmastersdomaincom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-eu-west-1c.masters.domain.com",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmastereuwest1cmastersdomaincom"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest1cdomaincom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-eu-west-1c.masters.domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-eu-west-1c",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapidomaincom"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupnodesdomaincom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "nodes.domain.com",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationnodesdomaincom"
        },
        "MaxSize": 3,
        "MinSize": 3,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest1adomaincom"
          },
          {
            "Ref": "AWSEC2Subneteuwest1bdomaincom"
          },
          {
            "Ref": "AWSEC2Subneteuwest1cdomaincom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "nodes.domain.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "nodes",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSAutoScalingLaunchConfigurationbastionsdomaincom": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 32,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilebastionsdomaincom"
        },
        "ImageId": "ami-09b955ecb52ae9bcf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.domain.com-b3:e6:f1:df:7d:72:63:ae:2d:6f:9a:17:48:33:0c:2d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupbastiondomaincom"
          }
        ],
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationmastereuwest1amastersdomaincom": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 30,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersdomaincom"
        },
        "ImageId": "ami-09b955ecb52ae9bcf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.domain.com-b3:e6:f1:df:7d:72:63:ae:2d:6f:9a:17:48:33:0c:2d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersdomaincom"
          }
        ],
        "UserData": "IyEvYmluL2Jhc2gKIyBDb3B5cmlnaHQgMjAxNiBUaGUgS3ViZXJuZXRlcyBBdXRob3JzIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiMKIyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKIyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiMgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIyAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiMKIyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKIyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KIyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiMgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCgpzZXQgLW8gZXJyZXhpdApzZXQgLW8gbm91bnNldApzZXQgLW8gcGlwZWZhaWwKCk5PREVVUF9VUkw9aHR0cHM6Ly9rdWJldXB2Mi5zMy5hbWF6b25hd3MuY29tL2tvcHMvMS4xMC4wL2xpbnV4L2FtZDY0L25vZGV1cApOT0RFVVBfSEFTSD1mYjM4YTEwMTVhMzU4OWVhZTIyOTI0YzliNjIzZDMyOWM5NjQyNDRmCgpleHBvcnQgQVdTX1JFR0lPTj1ldS13ZXN0LTEKCgoKCmZ1bmN0aW9uIGVuc3VyZS1pbnN0YWxsLWRpcigpIHsKICBJTlNUQUxMX0RJUj0iL3Zhci9jYWNoZS9rdWJlcm5ldGVzLWluc3RhbGwiCiAgIyBPbiBDb250YWluZXJPUywgd2UgaW5zdGFsbCB0byAvdmFyL2xpYi90b29sYm94IGluc3RhbGwgKGJlY2F1c2Ugb2Ygbm9leGVjKQogIGlmIFtbIC1kIC92YXIvbGliL3Rvb2xib3ggXV07IHRoZW4KICAgIElOU1RBTExfRElSPSIvdmFyL2xpYi90b29sYm94L2t1YmVybmV0ZXMtaW5zdGFsbCIKICBmaQogIG1rZGlyIC1wICR7SU5TVEFMTF9ESVJ9CiAgY2QgJHtJTlNUQUxMX0RJUn0KfQoKIyBSZXRyeSBhIGRvd25sb2FkIHVudGlsIHdlIGdldCBpdC4gVGFrZXMgYSBoYXNoIGFuZCBhIHNldCBvZiBVUkxzLgojCiMgJDEgaXMgdGhlIHNoYTEgb2YgdGhlIFVSTC4gQ2FuIGJlICIiIGlmIHRoZSBzaGExIGlzIHVua25vd24uCiMgJDIrIGFyZSB0aGUgVVJMcyB0byBkb3dubG9hZC4KZG93bmxvYWQtb3ItYnVzdCgpIHsKICBsb2NhbCAtciBoYXNoPSIkMSIKICBzaGlmdCAxCgogIHVybHM9KCAkKiApCiAgd2hpbGUgdHJ1ZTsgZG8KICAgIGZvciB1cmwgaW4gIiR7dXJsc1tAXX0iOyBkbwogICAgICBsb2NhbCBmaWxlPSIke3VybCMjKi99IgoKICAgICAgaWYgW1sgLWUgIiR7ZmlsZX0iIF1dOyB0aGVuCiAgICAgICAgZWNobyAiPT0gRmlsZSBleGlzdHMgZm9yICR7dXJsfSA9PSIKICAgICAgZWxpZiBbWyAkKHdoaWNoIGN1cmwpIF1dOyB0aGVuCiAgICAgICAgaWYgISBjdXJsIC1mIC0taXB2NCAtTG8gIiR7ZmlsZX0iIC0tY29ubmVjdC10aW1lb3V0IDIwIC0tcmV0cnkgNiAtLXJldHJ5LWRlbGF5IDEwICIke3VybH0iOyB0aGVuCiAgICAgICAgICBlY2hvICI9PSBGYWlsZWQgdG8gY3VybCAke3VybH0uIFJldHJ5aW5nLiA9PSIKICAgICAgICAgIGJyZWFrCiAgICAgICAgZmkKICAgICAgZWxpZiBbWyAkKHdoaWNoIHdnZXQgKSBdXTsgdGhlbgogICAgICAgIGlmICEgd2dldCAtLWluZXQ0LW9ubHkgLU8gIiR7ZmlsZX0iIC0tY29ubmVjdC10aW1lb3V0PTIwIC0tdHJpZXM9NiAtLXdhaXQ9MTAgIiR7dXJsfSI7IHRoZW4KICAgICAgICAgIGVjaG8gIj09IEZhaWxlZCB0byB3Z2V0ICR7dXJsfS4gUmV0cnlpbmcuID09IgogICAgICAgICAgYnJlYWsKICAgICAgICBmaQogICAgICBlbHNlCiAgICAgICAgZWNobyAiPT0gQ291bGQgbm90IGZpbmQgY3VybCBvciB3Z2V0LiBSZXRyeWluZy4gPT0iCiAgICAgICAgYnJlYWsKICAgICAgZmkKCiAgICAgIGlmIFtbIC1uICIke2hhc2h9IiBdXSAmJiAhIHZhbGlkYXRlLWhhc2ggIiR7ZmlsZX0iICIke2hhc2h9IjsgdGhlbgogICAgICAgIGVjaG8gIj09IEhhc2ggdmFsaWRhdGlvbiBvZiAke3VybH0gZmFpbGVkLiBSZXRyeWluZy4gPT0iCiAgICAgICAgcm0gLWYgIiR7ZmlsZX0iCiAgICAgIGVsc2UKICAgICAgICBpZiBbWyAtbiAiJHtoYXNofSIgXV07IHRoZW4KICAgICAgICAgIGVjaG8gIj09IERvd25sb2FkZWQgJHt1cmx9IChTSEExID0gJHtoYXNofSkgPT0iCiAgICAgICAgZWxzZQogICAgICAgICAgZWNobyAiPT0gRG93bmxvYWRlZCAke3VybH0gPT0iCiAgICAgICAgZmkKICAgICAgICByZXR1cm4KICAgICAgZmkKICAgIGRvbmUKCiAgICBlY2hvICJBbGwgZG93bmxvYWRzIGZhaWxlZDsgc2xlZXBpbmcgYmVmb3JlIHJldHJ5aW5nIgogICAgc2xlZXAgNjAKICBkb25lCn0KCnZhbGlkYXRlLWhhc2goKSB7CiAgbG9jYWwgLXIgZmlsZT0iJDEiCiAgbG9jYWwgLXIgZXhwZWN0ZWQ9IiQyIgogIGxvY2FsIGFjdHVhbAoKICBhY3R1YWw9JChzaGExc3VtICR7ZmlsZX0gfCBhd2sgJ3sgcHJpbnQgJDEgfScpIHx8IHRydWUKICBpZiBbWyAiJHthY3R1YWx9IiAhPSAiJHtleHBlY3RlZH0iIF1dOyB0aGVuCiAgICBlY2hvICI9PSAke2ZpbGV9IGNvcnJ1cHRlZCwgc2hhMSAke2FjdHVhbH0gZG9lc24ndCBtYXRjaCBleHBlY3RlZCAke2V4cGVjdGVkfSA9PSIKICAgIHJldHVybiAxCiAgZmkKfQoKZnVuY3Rpb24gc3BsaXQtY29tbWFzKCkgewogIGVjaG8gJDEgfCB0ciAiLCIgIlxuIgp9CgpmdW5jdGlvbiB0cnktZG93bmxvYWQtcmVsZWFzZSgpIHsKICAjIFRPRE8oem1lcmx5bm4pOiBOb3cgd2UgUkVBTExZIGhhdmUgbm8gZXhjdXNlIG5vdCB0byBkbyB0aGUgcmVib290CiAgIyBvcHRpbWl6YXRpb24uCgogIGxvY2FsIC1yIG5vZGV1cF91cmxzPSggJChzcGxpdC1jb21tYXMgIiR7Tk9ERVVQX1VSTH0iKSApCiAgbG9jYWwgLXIgbm9kZXVwX2ZpbGVuYW1lPSIke25vZGV1cF91cmxzWzBdIyMqL30iCiAgaWYgW1sgLW4gIiR7Tk9ERVVQX0hBU0g6LX0iIF1dOyB0aGVuCiAgICBsb2NhbCAtciBub2RldXBfaGFzaD0iJHtOT0RFVVBfSEFTSH0iCiAgZWxzZQogICMgVE9ETzogUmVtb3ZlPwogICAgZWNobyAiRG93bmxvYWRpbmcgc2hhMSAobm90IGZvdW5kIGluIGVudikiCiAgICBkb3dubG9hZC1vci1idXN0ICIiICIke25vZGV1cF91cmxzW0BdLyUvLnNoYTF9IgogICAgbG9jYWwgLXIgbm9kZXVwX2hhc2g9JChjYXQgIiR7bm9kZXVwX2ZpbGVuYW1lfS5zaGExIikKICBmaQoKICBlY2hvICJEb3dubG9hZGluZyBub2RldXAgKCR7bm9kZXVwX3VybHNbQF19KSIKICBkb3dubG9hZC1vci1idXN0ICIke25vZGV1cF9oYXNofSIgIiR7bm9kZXVwX3VybHNbQF19IgoKICBjaG1vZCAreCBub2RldXAKfQoKZnVuY3Rpb24gZG93bmxvYWQtcmVsZWFzZSgpIHsKICAjIEluIGNhc2Ugb2YgZmFpbHVyZSBjaGVja2luZyBpbnRlZ3JpdHkgb2YgcmVsZWFzZSwgcmV0cnkuCiAgdW50aWwgdHJ5LWRvd25sb2FkLXJlbGVhc2U7IGRvCiAgICBzbGVlcCAxNQogICAgZWNobyAiQ291bGRuJ3QgZG93bmxvYWQgcmVsZWFzZS4gUmV0cnlpbmcuLi4iCiAgZG9uZQoKICBlY2hvICJSdW5uaW5nIG5vZGV1cCIKICAjIFdlIGNhbid0IHJ1biBpbiB0aGUgZm9yZWdyb3VuZCBiZWNhdXNlIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXIvZG9ja2VyL2lzc3Vlcy8yMzc5MwogICggY2QgJHtJTlNUQUxMX0RJUn07IC4vbm9kZXVwIC0taW5zdGFsbC1zeXN0ZW1kLXVuaXQgLS1jb25mPSR7SU5TVEFMTF9ESVJ9L2t1YmVfZW52LnlhbWwgLS12PTggICkKfQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgovYmluL3N5c3RlbWQtbWFjaGluZS1pZC1zZXR1cCB8fCBlY2hvICJmYWlsZWQgdG8gc2V0IHVwIGVuc3VyZSBtYWNoaW5lLWlkIGNvbmZpZ3VyZWQiCgplY2hvICI9PSBub2RldXAgbm9kZSBjb25maWcgc3RhcnRpbmcgPT0iCmVuc3VyZS1pbnN0YWxsLWRpcgoKY2F0ID4gY2x1c3Rlcl9zcGVjLnlhbWwgPDwgJ19fRU9GX0NMVVNURVJfU1BFQycKY2xvdWRDb25maWc6IG51bGwKZG9ja2VyOgogIGlwTWFzcTogZmFsc2UKICBpcFRhYmxlczogZmFsc2UKICBsb2dEcml2ZXI6IGpzb24tZmlsZQogIGxvZ0xldmVsOiB3YXJuCiAgbG9nT3B0OgogIC0gbWF4LXNpemU9MTBtCiAgLSBtYXgtZmlsZT01CiAgc3RvcmFnZTogb3ZlcmxheSxhdWZzCiAgdmVyc2lvbjogMTcuMDMuMgplbmNyeXB0aW9uQ29uZmlnOiBudWxsCmV0Y2RDbHVzdGVyczoKICBldmVudHM6CiAgICBpbWFnZTogazhzLmdjci5pby9ldGNkOjIuMi4xCiAgICB2ZXJzaW9uOiAyLjIuMQogIG1haW46CiAgICBpbWFnZTogazhzLmdjci5pby9ldGNkOjIuMi4xCiAgICB2ZXJzaW9uOiAyLjIuMQprdWJlQVBJU2VydmVyOgogIGFsbG93UHJpdmlsZWdlZDogdHJ1ZQogIGFub255bW91c0F1dGg6IGZhbHNlCiAgYXBpU2VydmVyQ291bnQ6IDMKICBhdXRob3JpemF0aW9uTW9kZTogUkJBQwogIGJpbmRBZGRyZXNzOiAwLjAuMC4wCiAgY2xvdWRQcm92aWRlcjogYXdzCiAgZW5hYmxlQWRtaXNzaW9uUGx1Z2luczoKICAtIEluaXRpYWxpemVycwogIC0gTmFtZXNwYWNlTGlmZWN5Y2xlCiAgLSBMaW1pdFJhbmdlcgogIC0gU2VydmljZUFjY291bnQKICAtIFBlcnNpc3RlbnRWb2x1bWVMYWJlbAogIC0gRGVmYXVsdFN0b3JhZ2VDbGFzcwogIC0gRGVmYXVsdFRvbGVyYXRpb25TZWNvbmRzCiAgLSBNdXRhdGluZ0FkbWlzc2lvbldlYmhvb2sKICAtIFZhbGlkYXRpbmdBZG1pc3Npb25XZWJob29rCiAgLSBOb2RlUmVzdHJpY3Rpb24KICAtIFJlc291cmNlUXVvdGEKICBldGNkUXVvcnVtUmVhZDogZmFsc2UKICBldGNkU2VydmVyczoKICAtIGh0dHA6Ly8xMjcuMC4wLjE6NDAwMQogIGV0Y2RTZXJ2ZXJzT3ZlcnJpZGVzOgogIC0gL2V2ZW50cyNodHRwOi8vMTI3LjAuMC4xOjQwMDIKICBpbWFnZTogazhzLmdjci5pby9rdWJlLWFwaXNlcnZlcjp2MS4xMC42CiAgaW5zZWN1cmVCaW5kQWRkcmVzczogMTI3LjAuMC4xCiAgaW5zZWN1cmVQb3J0OiA4MDgwCiAga3ViZWxldFByZWZlcnJlZEFkZHJlc3NUeXBlczoKICAtIEludGVybmFsSVAKICAtIEhvc3RuYW1lCiAgLSBFeHRlcm5hbElQCiAgbG9nTGV2ZWw6IDIKICByZXF1ZXN0aGVhZGVyQWxsb3dlZE5hbWVzOgogIC0gYWdncmVnYXRvcgogIHJlcXVlc3RoZWFkZXJFeHRyYUhlYWRlclByZWZpeGVzOgogIC0gWC1SZW1vdGUtRXh0cmEtCiAgcmVxdWVzdGhlYWRlckdyb3VwSGVhZGVyczoKICAtIFgtUmVtb3RlLUdyb3VwCiAgcmVxdWVzdGhlYWRlclVzZXJuYW1lSGVhZGVyczoKICAtIFgtUmVtb3RlLVVzZXIKICBzZWN1cmVQb3J0OiA0NDMKICBzZXJ2aWNlQ2x1c3RlcklQUmFuZ2U6IDEwMC42NC4wLjAvMTMKICBzdG9yYWdlQmFja2VuZDogZXRjZDIKa3ViZUNvbnRyb2xsZXJNYW5hZ2VyOgogIGFsbG9jYXRlTm9kZUNJRFJzOiB0cnVlCiAgYXR0YWNoRGV0YWNoUmVjb25jaWxlU3luY1BlcmlvZDogMW0wcwogIGNsb3VkUHJvdmlkZXI6IGF3cwogIGNsdXN0ZXJDSURSOiAxMDAuOTYuMC4wLzExCiAgY2x1c3Rlck5hbWU6IGRvbWFpbi5jb20KICBjb25maWd1cmVDbG91ZFJvdXRlczogZmFsc2UKICBpbWFnZTogazhzLmdjci5pby9rdWJlLWNvbnRyb2xsZXItbWFuYWdlcjp2MS4xMC42CiAgbGVhZGVyRWxlY3Rpb246CiAgICBsZWFkZXJFbGVjdDogdHJ1ZQogIGxvZ0xldmVsOiAyCiAgdXNlU2VydmljZUFjY291bnRDcmVkZW50aWFsczogdHJ1ZQprdWJlUHJveHk6CiAgY2x1c3RlckNJRFI6IDEwMC45Ni4wLjAvMTEKICBjcHVSZXF1ZXN0OiAxMDBtCiAgaG9zdG5hbWVPdmVycmlkZTogJ0Bhd3MnCiAgaW1hZ2U6IGs4cy5nY3IuaW8va3ViZS1wcm94eTp2MS4xMC42CiAgbG9nTGV2ZWw6IDIKa3ViZVNjaGVkdWxlcjoKICBpbWFnZTogazhzLmdjci5pby9rdWJlLXNjaGVkdWxlcjp2MS4xMC42CiAgbGVhZGVyRWxlY3Rpb246CiAgICBsZWFkZXJFbGVjdDogdHJ1ZQogIGxvZ0xldmVsOiAyCmt1YmVsZXQ6CiAgYWxsb3dQcml2aWxlZ2VkOiB0cnVlCiAgY2dyb3VwUm9vdDogLwogIGNsb3VkUHJvdmlkZXI6IGF3cwogIGNsdXN0ZXJETlM6IDEwMC42NC4wLjEwCiAgY2x1c3RlckRvbWFpbjogY2x1c3Rlci5sb2NhbAogIGVuYWJsZURlYnVnZ2luZ0hhbmRsZXJzOiB0cnVlCiAgZXZpY3Rpb25IYXJkOiBtZW1vcnkuYXZhaWxhYmxlPDEwME1pLG5vZGVmcy5hdmFpbGFibGU8MTAlLG5vZGVmcy5pbm9kZXNGcmVlPDUlLGltYWdlZnMuYXZhaWxhYmxlPDEwJSxpbWFnZWZzLmlub2Rlc0ZyZWU8NSUKICBmZWF0dXJlR2F0ZXM6CiAgICBFeHBlcmltZW50YWxDcml0aWNhbFBvZEFubm90YXRpb246ICJ0cnVlIgogIGhvc3RuYW1lT3ZlcnJpZGU6ICdAYXdzJwogIGt1YmVjb25maWdQYXRoOiAvdmFyL2xpYi9rdWJlbGV0L2t1YmVjb25maWcKICBsb2dMZXZlbDogMgogIG5ldHdvcmtQbHVnaW5OYW1lOiBjbmkKICBub25NYXNxdWVyYWRlQ0lEUjogMTAwLjY0LjAuMC8xMAogIHBvZEluZnJhQ29udGFpbmVySW1hZ2U6IGs4cy5nY3IuaW8vcGF1c2UtYW1kNjQ6My4wCiAgcG9kTWFuaWZlc3RQYXRoOiAvZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzCm1hc3Rlckt1YmVsZXQ6CiAgYWxsb3dQcml2aWxlZ2VkOiB0cnVlCiAgY2dyb3VwUm9vdDogLwogIGNsb3VkUHJvdmlkZXI6IGF3cwogIGNsdXN0ZXJETlM6IDEwMC42NC4wLjEwCiAgY2x1c3RlckRvbWFpbjogY2x1c3Rlci5sb2NhbAogIGVuYWJsZURlYnVnZ2luZ0hhbmRsZXJzOiB0cnVlCiAgZXZpY3Rpb25IYXJkOiBtZW1vcnkuYXZhaWxhYmxlPDEwME1pLG5vZGVmcy5hdmFpbGFibGU8MTAlLG5vZGVmcy5pbm9kZXNGcmVlPDUlLGltYWdlZnMuYXZhaWxhYmxlPDEwJSxpbWFnZWZzLmlub2Rlc0ZyZWU8NSUKICBmZWF0dXJlR2F0ZXM6CiAgICBFeHBlcmltZW50YWxDcml0aWNhbFBvZEFubm90YXRpb246ICJ0cnVlIgogIGhvc3RuYW1lT3ZlcnJpZGU6ICdAYXdzJwogIGt1YmVjb25maWdQYXRoOiAvdmFyL2xpYi9rdWJlbGV0L2t1YmVjb25maWcKICBsb2dMZXZlbDogMgogIG5ldHdvcmtQbHVnaW5OYW1lOiBjbmkKICBub25NYXNxdWVyYWRlQ0lEUjogMTAwLjY0LjAuMC8xMAogIHBvZEluZnJhQ29udGFpbmVySW1hZ2U6IGs4cy5nY3IuaW8vcGF1c2UtYW1kNjQ6My4wCiAgcG9kTWFuaWZlc3RQYXRoOiAvZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzCiAgcmVnaXN0ZXJTY2hlZHVsYWJsZTogZmFsc2UKCl9fRU9GX0NMVVNURVJfU1BFQwoKY2F0ID4gaWdfc3BlYy55YW1sIDw8ICdfX0VPRl9JR19TUEVDJwprdWJlbGV0OiBudWxsCm5vZGVMYWJlbHM6CiAga29wcy5rOHMuaW8vaW5zdGFuY2Vncm91cDogbWFzdGVyLWV1LXdlc3QtMWEKc3VzcGVuZFByb2Nlc3NlczogbnVsbAp0YWludHM6IG51bGwKCl9fRU9GX0lHX1NQRUMKCmNhdCA+IGt1YmVfZW52LnlhbWwgPDwgJ19fRU9GX0tVQkVfRU5WJwpBc3NldHM6Ci0gYzczMDBmNDQ5N2E5ZTkzYTViNzhhZmYwN2I0YWVmOWI0YTBhNTk1ZEBodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20va3ViZXJuZXRlcy1yZWxlYXNlL3JlbGVhc2UvdjEuMTAuNi9iaW4vbGludXgvYW1kNjQva3ViZWxldAotIDBiM2ZjMWFmNjgzZjcxOTA4NjI1ODk2ZTFlNjQxMjg3YzdjNjU4OTZAaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL2t1YmVybmV0ZXMtcmVsZWFzZS9yZWxlYXNlL3YxLjEwLjYvYmluL2xpbnV4L2FtZDY0L2t1YmVjdGwKLSBkNTk1ZDNkZWQ2NDk5YTY0ZThkYWMwMjQ2NmUyZjVmMmNlMjU3YzlmQGh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9rdWJlcm5ldGVzLXJlbGVhc2UvbmV0d29yay1wbHVnaW5zL2NuaS1wbHVnaW5zLWFtZDY0LXYwLjYuMC50Z3oKLSAxOTAzZDMwZjg3NDg4ZjZlMzU1MDkxODI4M2ZmOGFhMWM1NTUzNDcxQGh0dHBzOi8va3ViZXVwdjIuczMuYW1hem9uYXdzLmNvbS9rb3BzLzEuMTAuMC9saW51eC9hbWQ2NC91dGlscy50YXIuZ3oKQ2x1c3Rlck5hbWU6IGRvbWFpbi5jb20KQ29uZmlnQmFzZTogczM6Ly9taC1qZW5raW5zLWs4L2RvbWFpbi5jb20KSW5zdGFuY2VHcm91cE5hbWU6IG1hc3Rlci1ldS13ZXN0LTFhClRhZ3M6Ci0gX2F1dG9tYXRpY191cGdyYWRlcwotIF9hd3MKLSBfa3ViZXJuZXRlc19tYXN0ZXIKY2hhbm5lbHM6Ci0gczM6Ly9taC1qZW5raW5zLWs4L2RvbWFpbi5jb20vYWRkb25zL2Jvb3RzdHJhcC1jaGFubmVsLnlhbWwKcHJvdG9rdWJlSW1hZ2U6CiAgaGFzaDogMTM5ZDY5MjMwYmIwMjlhNDE5Y2E4ZTVhOWJlMmY0MDZkOGU2ODVjNAogIG5hbWU6IHByb3Rva3ViZToxLjEwLjAKICBzb3VyY2U6IGh0dHBzOi8va3ViZXVwdjIuczMuYW1hem9uYXdzLmNvbS9rb3BzLzEuMTAuMC9pbWFnZXMvcHJvdG9rdWJlLnRhci5negoKX19FT0ZfS1VCRV9FTlYKCmRvd25sb2FkLXJlbGVhc2UKZWNobyAiPT0gbm9kZXVwIG5vZGUgY29uZmlnIGRvbmUgPT0iCg==",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationmastereuwest1bmastersdomaincom": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 30,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersdomaincom"
        },
        "ImageId": "ami-09b955ecb52ae9bcf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.domain.com-b3:e6:f1:df:7d:72:63:ae:2d:6f:9a:17:48:33:0c:2d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersdomaincom"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationmastereuwest1cmastersdomaincom": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 30,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersdomaincom"
        },
        "ImageId": "ami-09b955ecb52ae9bcf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.domain.com-b3:e6:f1:df:7d:72:63:ae:2d:6f:9a:17:48:33:0c:2d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersdomaincom"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationnodesdomaincom": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 30,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilenodesdomaincom"
        },
        "ImageId": "ami-09b955ecb52ae9bcf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.domain.com-b3:e6:f1:df:7d:72:63:ae:2d:6f:9a:17:48:33:0c:2d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupnodesdomaincom"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSEC2DHCPOptionsdomaincom": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-west-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2EIPeuwest1adomaincom": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "eu-west-1a.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2EIPeuwest1bdomaincom": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "eu-west-1b.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2EIPeuwest1cdomaincom": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "eu-west-1c.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2InternetGatewaydomaincom": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2NatGatewayeuwest1adomaincom": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "AWSEC2EIPeuwest1adomaincom",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest1adomaincom"
        },
        "tags": {
          "KubernetesCluster": "domain.com",
          "Name": "eu-west-1a.domain.com",
          "kubernetes.io/cluster/domain.com": "owned"
        }
      }
    },
    "AWSEC2NatGatewayeuwest1bdomaincom": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "AWSEC2EIPeuwest1bdomaincom",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest1bdomaincom"
        },
        "tags": {
          "KubernetesCluster": "domain.com",
          "Name": "eu-west-1b.domain.com",
          "kubernetes.io/cluster/domain.com": "owned"
        }
      }
    },
    "AWSEC2NatGatewayeuwest1cdomaincom": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "AWSEC2EIPeuwest1cdomaincom",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest1cdomaincom"
        },
        "tags": {
          "KubernetesCluster": "domain.com",
          "Name": "eu-west-1c.domain.com",
          "kubernetes.io/cluster/domain.com": "owned"
        }
      }
    },
    "AWSEC2Route00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledomaincom"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AWSEC2InternetGatewaydomaincom"
        }
      }
    },
    "AWSEC2RouteTabledomaincom": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "public"
          }
        ]
      }
    },
    "AWSEC2RouteTableprivateeuwest1adomaincom": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "private-eu-west-1a.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "private-eu-west-1a"
          }
        ]
      }
    },
    "AWSEC2RouteTableprivateeuwest1bdomaincom": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "private-eu-west-1b.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "private-eu-west-1b"
          }
        ]
      }
    },
    "AWSEC2RouteTableprivateeuwest1cdomaincom": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "private-eu-west-1c.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "private-eu-west-1c"
          }
        ]
      }
    },
    "AWSEC2Routeprivateeuwest1a00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest1adomaincom"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AWSEC2NatGatewayeuwest1adomaincom"
        }
      }
    },
    "AWSEC2Routeprivateeuwest1b00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest1bdomaincom"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AWSEC2NatGatewayeuwest1bdomaincom"
        }
      }
    },
    "AWSEC2Routeprivateeuwest1c00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest1cdomaincom"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AWSEC2NatGatewayeuwest1cdomaincom"
        }
      }
    },
    "AWSEC2SecurityGroupEgressapielbegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressbastionegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupbastiondomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressbastionelbegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupbastionelbdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressmasteregress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressnodeegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallnodetonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressbastiontomasterssh": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupbastiondomaincom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressbastiontonodessh": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupbastiondomaincom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngresshttpsapielb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbdomaincom"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresshttpselbtomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupapielbdomaincom"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp12379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "FromPort": 1,
        "ToPort": 2379,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp23824000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "FromPort": 2382,
        "ToPort": 4000,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp400365535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "FromPort": 4003,
        "ToPort": 65535,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomasterudp165535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdomaincom"
        },
        "FromPort": 1,
        "ToPort": 65535,
        "IpProtocol": "udp"
      }
    },
    "AWSEC2SecurityGroupIngresssshelbtobastion": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupbastiondomaincom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupbastionelbdomaincom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltobastionelb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupbastionelbdomaincom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupapielbdomaincom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "GroupDescription": "Security group for api ELB",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "api-elb.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupbastiondomaincom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "GroupDescription": "Security group for bastion",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "bastion.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupbastionelbdomaincom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "GroupDescription": "Security group for bastion ELB",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "bastion-elb.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupmastersdomaincom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "GroupDescription": "Security group for masters",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "masters.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupnodesdomaincom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "GroupDescription": "Security group for nodes",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "nodes.domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SubnetRouteTableAssociationprivateeuwest1adomaincom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subneteuwest1adomaincom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest1adomaincom"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationprivateeuwest1bdomaincom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subneteuwest1bdomaincom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest1bdomaincom"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationprivateeuwest1cdomaincom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subneteuwest1cdomaincom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest1cdomaincom"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationutilityeuwest1adomaincom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest1adomaincom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledomaincom"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationutilityeuwest1bdomaincom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest1bdomaincom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledomaincom"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationutilityeuwest1cdomaincom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest1cdomaincom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledomaincom"
        }
      }
    },
    "AWSEC2Subneteuwest1adomaincom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "CidrBlock": "172.20.32.0/19",
        "AvailabilityZone": "eu-west-1a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "eu-west-1a.domain.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subneteuwest1bdomaincom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "CidrBlock": "172.20.64.0/19",
        "AvailabilityZone": "eu-west-1b",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "eu-west-1b.domain.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subneteuwest1cdomaincom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "CidrBlock": "172.20.96.0/19",
        "AvailabilityZone": "eu-west-1c",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "eu-west-1c.domain.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetutilityeuwest1adomaincom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "CidrBlock": "172.20.0.0/22",
        "AvailabilityZone": "eu-west-1a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "utility-eu-west-1a.domain.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Utility"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetutilityeuwest1bdomaincom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "CidrBlock": "172.20.4.0/22",
        "AvailabilityZone": "eu-west-1b",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "utility-eu-west-1b.domain.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Utility"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetutilityeuwest1cdomaincom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "CidrBlock": "172.20.8.0/22",
        "AvailabilityZone": "eu-west-1c",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "utility-eu-west-1c.domain.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Utility"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2VPCDHCPOptionsAssociationdomaincom": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "DhcpOptionsId": {
          "Ref": "AWSEC2DHCPOptionsdomaincom"
        }
      }
    },
    "AWSEC2VPCGatewayAttachmentdomaincom": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdomaincom"
        },
        "InternetGatewayId": {
          "Ref": "AWSEC2InternetGatewaydomaincom"
        }
      }
    },
    "AWSEC2VPCdomaincom": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "domain.com"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdeventsdomaincom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-1a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-events.domain.com"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "a/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdmaindomaincom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-1a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-main.domain.com"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "a/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumebetcdeventsdomaincom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-1b",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "b.etcd-events.domain.com"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "b/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumebetcdmaindomaincom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-1b",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "b.etcd-main.domain.com"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "b/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumecetcdeventsdomaincom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-1c",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "c.etcd-events.domain.com"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "c/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumecetcdmaindomaincom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-1c",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "c.etcd-main.domain.com"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "c/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/domain.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingLoadBalancerapidomaincom": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": "api-domain-com-riofbp",
        "Listeners": [
          {
            "InstancePort": 443,
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": 443,
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupapielbdomaincom"
          }
        ],
        "Subnets": [
          {
            "Ref": "AWSEC2Subneteuwest1adomaincom"
          },
          {
            "Ref": "AWSEC2Subneteuwest1bdomaincom"
          },
          {
            "Ref": "AWSEC2Subneteuwest1cdomaincom"
          }
        ],
        "Scheme": "internal",
        "HealthCheck": {
          "Target": "SSL:443",
          "HealthyThreshold": 2,
          "UnhealthyThreshold": 2,
          "Interval": 10,
          "Timeout": 5
        },
        "ConnectionSettings": {
          "IdleTimeout": 300
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "api.domain.com"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingLoadBalancerbastiondomaincom": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": "bastion-domain-com-6p32k7",
        "Listeners": [
          {
            "InstancePort": 22,
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": 22,
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupbastionelbdomaincom"
          }
        ],
        "Subnets": [
          {
            "Ref": "AWSEC2Subnetutilityeuwest1adomaincom"
          },
          {
            "Ref": "AWSEC2Subnetutilityeuwest1bdomaincom"
          },
          {
            "Ref": "AWSEC2Subnetutilityeuwest1cdomaincom"
          }
        ],
        "HealthCheck": {
          "Target": "TCP:22",
          "HealthyThreshold": 2,
          "UnhealthyThreshold": 2,
          "Interval": 10,
          "Timeout": 5
        },
        "ConnectionSettings": {
          "IdleTimeout": 300
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "domain.com"
          },
          {
            "Key": "Name",
            "Value": "bastion.domain.com"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilebastionsdomaincom": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolebastionsdomaincom"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilemastersdomaincom": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersdomaincom"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilenodesdomaincom": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesdomaincom"
          }
        ]
      }
    },
    "AWSIAMPolicybastionsdomaincom": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "bastions.domain.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolebastionsdomaincom"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeRegions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicymastersdomaincom": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "masters.domain.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersdomaincom"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DescribeVolumesModifications",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/KubernetesCluster": "domain.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "domain.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:AttachLoadBalancerToSubnets",
                "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancerPolicy",
                "elasticloadbalancing:CreateLoadBalancerListeners",
                "elasticloadbalancing:ConfigureHealthCheck",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancerListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeVpcs",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "iam:ListServerCertificates",
                "iam:GetServerCertificate"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::mh-jenkins-k8"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::mh-jenkins-k8/domain.com/*"
            },
            {
              "Action": [
                "route53:ChangeResourceRecordSets",
                "route53:ListResourceRecordSets",
                "route53:GetHostedZone"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::hostedzone/Z248GN2WOAP88Z"
              ]
            },
            {
              "Action": [
                "route53:GetChange"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*"
              ]
            },
            {
              "Action": [
                "route53:ListHostedZones"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicynodesdomaincom": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "nodes.domain.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesdomaincom"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::mh-jenkins-k8"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::mh-jenkins-k8/domain.com/addons/*",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/cluster.spec",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/config",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/instancegroup/*",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/pki/issued/*",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/pki/private/kube-proxy/*",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/pki/private/kubelet/*",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/pki/ssh/*",
                "arn:aws:s3:::mh-jenkins-k8/domain.com/secrets/dockerconfig"
              ]
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolebastionsdomaincom": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "bastions.domain.com",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolemastersdomaincom": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "masters.domain.com",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolenodesdomaincom": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "nodes.domain.com",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSRoute53RecordSetapidomaincom": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "api.domain.com",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "AWSElasticLoadBalancingLoadBalancerapidomaincom",
              "DNSName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "AWSElasticLoadBalancingLoadBalancerapidomaincom",
              "CanonicalHostedZoneNameID"
            ]
          },
          "EvaluateTargetHealth": false
        },
        "HostedZoneId": "/hostedzone/Z248GN2WOAP88Z"
      }
    },
    "AWSRoute53RecordSetbastiondomaincom": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "bastion.domain.com",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "AWSElasticLoadBalancingLoadBalancerbastiondomaincom",
              "DNSName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "AWSElasticLoadBalancingLoadBalancerbastiondomaincom",
              "CanonicalHostedZoneNameID"
            ]
          },
          "EvaluateTargetHealth": false
        },
        "HostedZoneId": "/hostedzone/Z248GN2WOAP88Z"
      }
    }
  }
